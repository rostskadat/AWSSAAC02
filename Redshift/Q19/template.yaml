AWSTemplateFormatVersion: '2010-09-09'
Transform: 
  - AWS::Serverless-2016-10-31
  - SamPolicyTemplateTranslator
Description: >
  VPC / Q09
Parameters:
  SourcePublicIp: 
    Description: The IP from which you'll be connecting...
    Type: String
    Default: "129.35.108.66"
  KeyName:
    Description: Key used to login into the instance
    Type: AWS::EC2::KeyPair::KeyName
    Default: ARCHITECTURE_LABS
  ImageId:
    Description: "The Image Id (AMI) to use"
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Default: "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
  DBName: 
    Description: The default master username
    Type: String
    Default: dev
  MasterUsername:
    Description: The default master username
    Type: String
    Default: admin
  MasterUserPassword:
    Description: The default master password
    Type: String
    Default: Passw0rd
Resources:

  #----------------------------------------------------------------------------
  #
  # AWS VPC: Networking
  #
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      InstanceTenancy: default
      EnableDnsSupport: true
      EnableDnsHostnames: true

  # IGW
  InternetGateway:
    Type: AWS::EC2::InternetGateway

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: 
        Ref: Vpc
      InternetGatewayId: 
        Ref: InternetGateway

  # Subnets
  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: 
        Fn::Select:
          - 0
          - Fn::GetAZs: 
              Ref: 'AWS::Region'
      VpcId: 
        Ref: Vpc
      MapPublicIpOnLaunch: true
  
  # Routing
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: 
        Ref: Vpc

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: 
        Ref: RouteTable
      SubnetId: 
        Ref: Subnet

  RouteInternetGateway:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      RouteTableId: 
        Ref: RouteTable
      GatewayId: 
        Ref: InternetGateway
    DependsOn: InternetGatewayAttachment

  # Network ACL
  NetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: 
        Ref: Vpc

  NetworkAclOutbound:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: "0.0.0.0/0"
      Egress: true
      Protocol: "-1"
      RuleAction: allow
      RuleNumber: 100
      NetworkAclId: 
        Ref: NetworkAcl

  NetworkAclInbound:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      CidrBlock: "0.0.0.0/0"
      Protocol: "-1"
      RuleAction: allow
      RuleNumber: 100
      NetworkAclId: 
        Ref: NetworkAcl

  SubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: 
        Ref: NetworkAcl
      SubnetId: 
        Ref: Subnet

  #----------------------------------------------------------------------------
  #
  # AWS EC2: Compute
  #
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH connection from SourcePublicIp 
      VpcId: 
        Ref: Vpc
      SecurityGroupIngress:
        - Description: "Allow all inbound SSH traffic from our Public IP address"
          CidrIp: 
            Fn::Sub: "${SourcePublicIp}/32"
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22

  SecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: "Allow all inbound traffic from internal traffic"
      GroupId: 
        Ref: SecurityGroup
      IpProtocol: "-1"
      SourceSecurityGroupId: 
        Ref: SecurityGroup

  EC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - 'ec2.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: '/'
      Policies:
        - S3CrudPolicy:
            BucketName: "myBucket"

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: '/'
      Roles: 
        - Ref: EC2InstanceRole

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties: 
      LaunchTemplateData: 
        IamInstanceProfile: 
          Arn: 
            Fn::GetAtt: InstanceProfile.Arn
        ImageId: 
          Ref: ImageId
        InstanceType: t2.micro
        KeyName: 
          Ref: KeyName
        TagSpecifications: 
          - ResourceType: instance
            Tags: 
              - Key: PLATFORM
                Value: ARCHITECTURE_LABS
              - Key: Name
                Value: 
                  Fn::Sub: '${AWS::StackName}-Instance'
          - ResourceType: volume
            Tags: 
              - Key: PLATFORM
                Value: ARCHITECTURE_LABS
              - Key: Name
                Value: 
                  Fn::Sub: '${AWS::StackName}-Instance-VolumeRoot'
        UserData: 
          Fn::Base64: 
            Fn::Sub: |
              #!/bin/bash
              yum update -y

  Instance:
    Type: AWS::EC2::Instance
    Properties: 
      LaunchTemplate: 
        LaunchTemplateId: 
          Ref: LaunchTemplate
        Version: 
          Fn::GetAtt: LaunchTemplate.LatestVersionNumber
      SubnetId:
        Ref: Subnet
      SecurityGroupIds: 
        - Ref: SecurityGroup

  Cluster:
    Type: AWS::Redshift::Cluster
    Properties: 
      AvailabilityZone: 
        Fn::Select:
          - 0
          - Fn::GetAZs: 
              Ref: 'AWS::Region'
      ClusterType: single-node 
      DBName:
        Ref: DBName
      MasterUsername: 
        Ref: MasterUsername
      MasterUserPassword: 
        Ref: MasterUserPassword
      NodeType: dc2.large

Outputs:
  Instance:
    Description: The host to connect to
    Value: 
      Fn::GetAtt: Instance.PublicDnsName

  ClusterEndpoint:
    Description: The Bastion host to connect to
    Value: 
      Fn::Sub: "${Cluster.Endpoint.Address}:${Cluster.Endpoint.Port}"

