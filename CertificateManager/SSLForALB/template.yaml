AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  SSLForALB. Showcases the use of an SSL certifiate with an Application LoadBalancer
Parameters:

  HostedZoneName:
    Description: "The hosted zone name"
    Type: String
    Default: domain.com

  SubDomainName:
    Description: "The subdomain of the API"
    Type: String
    Default: sapc01-alb

  VpcId:
    Description: "The VPC in which to put the load balancer"
    Type: AWS::EC2::VPC::Id
    Default: vpc-9e9b9ffa

  Subnets:
    Description: "The Subnets in which to put the load balancer"
    Type: List<AWS::EC2::Subnet::Id>
    Default: "subnet-b09099d4,subnet-f76b6581,subnet-58421700"

  ImageId:
    Description: "The EC2 Instance AMI"
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Default: "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"

  KeyName:
    Description: "The Key to use to connect to the EC2 Instance"
    Type: AWS::EC2::KeyPair::KeyName
    Default: "SAPC01"

  CertificateArn:
    Description: "THe ACM Certificate Arn"
    Type: String
    Default: "arn:aws:acm:eu-west-1:123456789012:certificate/12345678-1234-1234-1234-123456789012"
      
Resources:

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/job-function/ViewOnlyAccess

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - Ref: InstanceRole

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate:
        LaunchTemplateId:
          Ref: LaunchTemplate
        Version:
          Fn::GetAtt: LaunchTemplate.LatestVersionNumber

  RecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      AliasTarget:
        HostedZoneId: 
          Fn::GetAtt: LoadBalancer.CanonicalHostedZoneID
        DNSName: 
          Fn::GetAtt: LoadBalancer.DNSName
      HostedZoneName: 
        # NOTE: the final dot
        Fn::Sub: "${HostedZoneName}."
      Name: 
        Fn::Sub: "${SubDomainName}.${HostedZoneName}"
      Type: A

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Subnets:
        Ref: Subnets
      Type: application
      Tags: 
        - Key: PLATFORM
          Value: SAPC01

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      Tags:
        - Key: PLATFORM
          Value: SAPC01
      Targets:
        - Id: 
            Ref: EC2Instance
      TargetType: instance
      VpcId:
        Ref: VpcId

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
        - CertificateArn: 
            Ref: CertificateArn
      DefaultActions:
      - TargetGroupArn:   
          Ref: TargetGroup
        Type: forward
      LoadBalancerArn: 
        Ref: LoadBalancer
      Port: 443
      Protocol: HTTPS

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default: [Install]
        Install:
          files:
            /etc/yum.repos.d/nginx.repo:
              content: |
                [nginx]
                name=nginx repo
                baseurl=http://nginx.org/packages/mainline/centos/7/$basearch/
                gpgcheck=0
                enabled=1
              mode: "000644"
              owner: root
              group: root
            /etc/nginx/conf.d/default.conf:
              content: 
                Fn::Sub: |
                  server {
                    listen       80;
                    server_name  ${SubDomainName}.${HostedZoneName};
                    access_log   /var/log/nginx/access.log;
                    error_log    /var/log/nginx/error.log;
                    location / {
                      root   /usr/share/nginx/html;
                      index  index.html index.htm;
                    }
                    error_page   500 502 503 504  /50x.html;
                    location = /50x.html {
                      root   /usr/share/nginx/html;
                    }
                  }
              mode: "000644"
              owner: root
              group: root
            /root/bootstrap.sh:
              content: 
                Fn::Sub: |
                  #!/bin/bash
                  yum install -y nginx git bc wget curl
                  systemctl enable nginx
                  systemctl start nginx
              mode: "000700"
              owner: root
              group: root
          commands:
            01_bootstrap:
              command: "bash /root/bootstrap.sh"
    Properties:
      LaunchTemplateData:
        IamInstanceProfile:
          Arn:
            Fn::GetAtt: InstanceProfile.Arn
        ImageId: 
          Ref: ImageId
        InstanceType: t3.micro
        KeyName: 
          Ref: KeyName
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: PLATFORM
                Value: SAPC01
          - ResourceType: volume
            Tags:
              - Key: PLATFORM
                Value: SAPC01
        UserData:
          Fn::Base64:
            Fn::Sub: |
              #!/bin/bash
              yum-config-manager --enable epel ; yum update -y ; yum install -y aws-cfn-bootstrap
              /opt/aws/bin/cfn-init --verbose --region ${AWS::Region} --stack ${AWS::StackName} --resource LaunchTemplate --role ${InstanceRole}
              echo "Done"

Outputs:

  EC2InstancePublicDnsName:
    Description: "EC2 Instance PublicDnsName"
    Value: 
      Fn::GetAtt: EC2Instance.PublicDnsName

  LoadBalancerDNSName:
    Description: "The LoadBalancer DNSName"
    Value: 
      Fn::GetAtt: LoadBalancer.DNSName

  RecordSet:
    Description: "RecordSet"
    Value: 
      Ref: RecordSet
