AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  AuroraAutoScaling. Showcase Aurora Autoscaling for Master / Replica setup
Metadata:
  AWS::ServerlessRepo::Application:
    Name: "RDS-AuroraAutoScaling"
    Description: Showcase Aurora Autoscaling for Master / Replica setup
    Author: rostskadat
    SpdxLicenseId: Apache-2.0
    ReadmeUrl: README.md
    Labels: ["SAPC01", "RDS"]
    HomePageUrl: https://github.com/rostskadat
    SemanticVersion: 0.0.1
    SourceCodeUrl: https://github.com/rostskadat

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Parameters related to Lambda
        Parameters:
          - "AuroraAutoScalingParameter"

Parameters:
  SubnetIds:
    Description: The SubnetIds
    Type: List<AWS::EC2::Subnet::Id>
    Default: "subnet-b09099d4,subnet-f76b6581"

  CPUThresholdHigh:
    Description: "The CPU that will trigger a Scale Out event. Adjust to the amount of CPU consumed by the bootstrap / busyloop SQLs"
    Type: Number
    Default: 40

  CPUThresholdLow:
    Description: "The CPU that will trigger a Scale In event. Adjust to the amount of CPU consumed by the bootstrap / busyloop SQLs"
    Type: Number
    Default: 10
  
  DBInstanceClass:
    Description: The DBInstanceClass
    Type: String
    Default: db.r5.xlarge

  MonitoringInterval:
    Description: The MonitoringInterval
    Type: Number
    Default: 5


Globals:
  Function:
    Handler: app.lambda_handler
    Layers:
      - !Ref AuroraAutoScalingLayer01
    Runtime: python3.8
    Timeout: 30
    Tags:
      PLATFORM: SAPC01

Resources:
  Secret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: The DBCluster MasterUserPassword
      GenerateSecretString:
        SecretStringTemplate: '{"username": "root"}'
        GenerateStringKey: "password"
        PasswordLength: 16
        ExcludeCharacters: '"@/\'
      Tags:
        - Key: PLATFORM
          Value: SAPC01

  SecretTargetAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref Secret
      TargetId: !Ref DBCluster
      TargetType: AWS::RDS::DBCluster

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Sub ${AWS::StackId}
      SubnetIds: !Ref SubnetIds
      Tags:
        - Key: PLATFORM
          Value: SAPC01

  DBCluster:
    Type: AWS::RDS::DBCluster
    DeletionPolicy: Delete
    Properties:
      DatabaseName: dev
      DBSubnetGroupName: !Ref DBSubnetGroup
      Engine: aurora
      MasterUsername: !Sub "{{resolve:secretsmanager:${Secret}:SecretString:username}}"
      MasterUserPassword: !Sub "{{resolve:secretsmanager:${Secret}:SecretString:password}}"
      # Seems only valid for serverless engine
      # ScalingConfiguration:
      #   MaxCapacity: 2
      #   MinCapacity: 1

  # Furthermore the Autoscaling replica is using a mix of target scaling policy that
  # triggers a weird Autoscaling policy (i.e. not ec2 related):
  # arn:aws:autoscaling:eu-west-1:123456789012:scalingPolicy:40c4c575-7530-47cd-a9a0-1348105a1ec8:resource/rds/cluster:sapc01-auroraautoscaling-dbcluster-akipybfjc9vs:policyName/SAPAURORA:createdBy/9a79ea3c-1b76-4013-8a2b-2a8421cc83df

  MonitoringRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: monitoring.rds.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole
      Tags:
        - Key: PLATFORM
          Value: SAPC01

  DBInstance1:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    Properties:
      DBClusterIdentifier: !Ref DBCluster
      DBInstanceClass: db.r5.xlarge
      DBSubnetGroupName: !Ref DBSubnetGroup
      Engine: aurora
      MonitoringInterval: 5
      MonitoringRoleArn: !GetAtt MonitoringRole.Arn
      PubliclyAccessible: true

  AuroraAutoScalingLayer01:
    Type: AWS::Serverless::LayerVersion
    Metadata:
      BuildMethod: python3.8
    Properties:
      ContentUri: layers/AuroraAutoScalingLayer01
      CompatibleRuntimes:
        - python3.8
      RetentionPolicy: Delete

  ScaleInTopic:
    Type: AWS::SNS::Topic
    Properties: 
      Tags: 
        - Key: PLATFORM
          Value: SAPC01

  ScaleInFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/ScaleInFunction
      Environment:
        Variables: 
          DB_CLUSTER_IDENTIFIER: !Ref DBCluster
      Events:
        ScaleInEvent:
          Type: SNS
          Properties: 
            Topic: !Ref ScaleInTopic
      Policies: 
        - arn:aws:iam::aws:policy/AmazonRDSFullAccess
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: iam:PassRole
              Resource: !GetAtt MonitoringRole.Arn

  CPUUtilizationLow:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 1
      Statistic: Average
      Threshold: !Ref CPUThresholdLow
      AlarmDescription: !Sub "Trigger a scale in if CPUUtilization is less ${CPUThresholdLow}%"
      Period: 60
      AlarmActions: 
        - !Ref ScaleInTopic
      Namespace: 'AWS/RDS'
      ComparisonOperator: LessThanThreshold
      MetricName: CPUUtilization
      Dimensions:
        - Name: DBClusterIdentifier
          Value: !Ref DBCluster

  ScaleOutTopic:
    Type: AWS::SNS::Topic
    Properties: 
      Tags: 
        - Key: PLATFORM
          Value: SAPC01

  ScaleOutFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/ScaleOutFunction
      Environment:
        Variables: 
          DB_CLUSTER_IDENTIFIER: !Ref DBCluster
          DB_INSTANCE_CLASS: !Ref DBInstanceClass
          MONITORING_INTERVAL: !Ref MonitoringInterval
          MONITORING_ROLE_ARN: !GetAtt MonitoringRole.Arn
      Events:
        ScaleInEvent:
          Type: SNS
          Properties: 
            Topic: !Ref ScaleOutTopic
      Policies: 
        - arn:aws:iam::aws:policy/AmazonRDSFullAccess
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: iam:PassRole
              Resource: !GetAtt MonitoringRole.Arn

  CPUUtilizationHigh:
    Type: AWS::CloudWatch::Alarm
    Properties:
      EvaluationPeriods: 1
      Statistic: Average
      Threshold: !Ref CPUThresholdHigh
      AlarmDescription: !Sub "Trigger a scale out if CPUUtilization is more than ${CPUThresholdHigh}%"
      Period: 60
      AlarmActions: 
        - !Ref ScaleOutTopic
      Namespace: 'AWS/RDS'
      ComparisonOperator: GreaterThanThreshold
      MetricName: CPUUtilization
      Dimensions:
        - Name: DBClusterIdentifier
          Value: !Ref DBCluster

Outputs:
  DBCluster:
    Description: The DBCluster
    Value: !Ref DBCluster

  Secret:
    Description: The Secret
    Value: !Ref Secret

  DBClusterEndpointAddress:
    Description: The DBCluster Endpoint
    Value: !GetAtt DBCluster.Endpoint.Address

  DBClusterReadEndpointAddress:
    Description: The DBCluster ReadEndpoint
    Value: !GetAtt DBCluster.ReadEndpoint.Address

  DBClusterEndpointPort:
    Description: The DBCluster Endpoint
    Value: !GetAtt DBCluster.Endpoint.Port
