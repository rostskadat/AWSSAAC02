AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Route53
Parameters:
  HostedZoneId:
    Type: AWS::Route53::HostedZone::Id
    Description: The Hosted Zone in which to showcase the routing policies
    Default: Z4OAYE8GXTF5F
  KeyName:
    Description: "Key used to login into the instance"
    Type: AWS::EC2::KeyPair::KeyName
    Default: ARCHITECTURE_LABS
  VpcId:
    Description: "The Vpc ID in which to create the instance"
    Type: AWS::EC2::VPC::Id
    Default: vpc-9e9b9ffa
  Subnets:
    Description: "The Vpc ID in which to create the instance"
    Type: String #List<AWS::EC2::Subnet::Id>
    Default: "subnet-b09099d4,subnet-f76b6581,subnet-58421700"
  SecurityGroupId:
    Description: "The SecurityGroupId to associate with the instance"
    Type: AWS::EC2::SecurityGroup::Id
    Default: sg-e1435287
  InstanceProfileRole:
    Description: "The Role to attach to that instance"
    Type: String
    Default: AFBArchitectureLabs
  ImageId:
    Description: "The Image Id (AMI) to use"
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Default: "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"

Resources:

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - Ref: InstanceProfileRole

  Route53InstanceTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties: 
      LaunchTemplateData: 
        IamInstanceProfile: 
          Arn: 
            Fn::GetAtt: InstanceProfile.Arn
        ImageId: 
          Ref: ImageId
        InstanceType: t2.micro
        KeyName: 
          Ref: KeyName
        SecurityGroupIds: 
          - Ref: SecurityGroupId
        TagSpecifications: 
          - ResourceType: instance
            Tags: 
              - Key: PLATFORM
                Value: ARCHITECTURE_LABS
              - Key: Name
                Value: Route53-Instance
          - ResourceType: volume
            Tags: 
              - Key: PLATFORM
                Value: ARCHITECTURE_LABS
              - Key: Name
                Value: Route53-Instance-VolumeRoot
        UserData: 
          Fn::Base64: |
            #!/bin/bash
            yum update -y
            yum install httpd -y
            echo "<html><body><h1>Hello from $(curl http://169.254.169.254/latest/meta-data/public-hostname)</h1></body></html>" > /var/www/html/index.html
            systemctl start httpd
            systemctl enable httpd
            systemctl status httpd

  EC2Instance1:
    Type: AWS::EC2::Instance
    Properties: 
      LaunchTemplate: 
        LaunchTemplateId: 
          Ref: Route53InstanceTemplate
        Version: 
          Fn::GetAtt: Route53InstanceTemplate.LatestVersionNumber

  EC2Instance2:
    Type: AWS::EC2::Instance
    Properties: 
      LaunchTemplate: 
        LaunchTemplateId: 
          Ref: Route53InstanceTemplate
        Version: 
          Fn::GetAtt: Route53InstanceTemplate.LatestVersionNumber


  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups: 
        - Ref: SecurityGroupId
      Subnets:
        Fn::Split:
          - ","
          - Ref: Subnets
      Tags: 
        - Key: PLATFORM
          Value: ARCHITECTURE_LABS
        - Key: Name
          Value: 
            Fn::Sub: '${AWS::StackName}-LoadBalancer'

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      HealthCheckPath: /
      Matcher:
        HttpCode: '200-299'
      Tags:
        - Key: PLATFORM
          Value: ARCHITECTURE_LABS
        - Key: Name
          Value: 
            Fn::Sub: '${AWS::StackName}-TargetGroup'
      TargetType: instance
      Targets:
        - Id: 
            Ref: EC2Instance1
          Port: 80
        - Id: 
            Ref: EC2Instance2
          Port: 80

      VpcId:
        Ref: VpcId

  ListenerHTTP:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - TargetGroupArn: 
          Ref: TargetGroup
        Type: forward
      LoadBalancerArn: 
        Ref: LoadBalancer
      Port: 80
      Protocol: HTTP

Outputs:
  EC2Instance1:
    Description: The Newly launched EC2Instances
    Value:
      Fn::GetAtt: EC2Instance1.PublicDnsName
  EC2Instance2:
    Description: The Newly launched EC2Instances
    Value:
      Fn::GetAtt: EC2Instance2.PublicDnsName
  LoadBalancerDNSName:
    Description: The LoadBalancer DNSName
    Value:
      Fn::GetAtt: LoadBalancer.DNSName
  LoadBalancerCanonicalHostedZoneID:
    Description: The LoadBalancer CanonicalHostedZoneID
    Value:
      Fn::GetAtt: LoadBalancer.CanonicalHostedZoneID 
